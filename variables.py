import numpy as np

# These are the vectors for moving from any hex to one of its neighbors.
SE = np.array((1, 0, -1))
SW = np.array((0, 1, -1))
W = np.array((-1, 1, 0))
NW = np.array((-1, 0, 1))
NE = np.array((0, -1, 1))
E = np.array((1, -1, 0))
ALL_DIRECTIONS = np.array([NW, NE, E, SE, SW, W, ])
cube_diagonals = np.array([
   (+2, -1, -1), (+1, +1, -2), (-1, +2, -1), 
   (-2, +1, +1), (-1, -1, +2), (+1, -2, +1)
])
DEPTH = 0

zobristKey = 1 # Zobrist key of board position
DEPTH = 0 # the ply in which you perform the search
flag = 0 # exact, alhpa, beta, determines cut off
evaluation = 0 # States if the side to move is ahead
oldEntry = 1 # Entry in table that has been obtained on lower ply
move = [] # The move that was best on a certain DEPTH
historyHash = []
historyZobrist = 1 # store zobrist of from location
side = 1 # 1 = black moves, 0 = white moves


# cube board
hexboard_map = {
(-5, 10, -5): -1,
(-5, 9, -4): -1,
(-5, 8, -3): -1,
(-5, 7, -2): -1,
(-5, 6, -1): -1,
(-5, 5, 0): 1939212919950939759,
(-5, 4, 1): 9849431805437009732,
(-5, 3, 2): 16162666918917919806,
(-5, 2, 3): 15276516314310390362,
(-5, 1, 4): 11642453785499409731,
(-5, 0, 5): 4198843929353293072,

(-4, 9, -5): -1,
(-4, 8, -4): -1,
(-4, 7, -3): -1,
(-4, 6, -2): -1,
(-4, 5, -1): 242836734077330547,
(-4, 4, 0): 1027919702168188979,
(-4, 3, 1): 16832440912975894468,
(-4, 2, 2): 17340713814242594028,
(-4, 1, 3): 16266090026993502319,
(-4, 0, 4): 7984883234528157998,
(-4, -1, 5): 40694595421736207,

(-3, 8, -5): -1,
(-3, 7, -4): -1,
(-3, 6, -3): -1,
(-3, 5, -2): 12606065518542938582,
(-3, 4, -1): 139336708204130549,
(-3, 3, 0): 9404967577669660609,
(-3, 2, 1): 16988572083252292303,
(-3, 1, 2): 7774238338669335086,
(-3, 0, 3): 15158629369172322486,
(-3, -1, 4): 16361351586279929792,
(-3, -2, 5): 15132990715107860610,

(-2, 7, -5): -1,
(-2, 6, -4): -1,
(-2, 5, -3): 5267051858285417275,
(-2, 4, -2): 6790307694184382222,
(-2, 3, -1): 3573834257037273296,
(-2, 2, 0): 5286160300075179554,
(-2, 1, 1): 10897662397012006653,
(-2, 0, 2): 17483553982907062074,
(-2, -1, 3): 6324615498667232688,
(-2, -2, 4): 3214998845050975716,
(-2, -3, 5): 9587047821109070005,

(-1, 6, -5): -1,
(-1, 5, -4): 144597867867711702,
(-1, 4, -3): 17775915297188647818,
(-1, 3, -2): 18407867710085699471,
(-1, 2, -1): 10653868923730995775,
(-1, 1, 0): 4101508452747031293,
(-1, 0, 1): 4432349630158972496,
(-1, -1, 2): 6428893941102858473,
(-1, -2, 3): 5262733008685202359,
(-1, -3, 4): 1566494270541933283,
(-1, -4, 5): 9731098770160265163,

(0, 5, -5): 2448042715754671234,
(0, 4, -4): 10120822579704798707,
(0, 3, -3): 18112980892344717096,
(0, 2, -2): 6176237247625849847,
(0, 1, -1): 17653286343034920267,
(0, 0, 0): 9453218997835932307,
(0, -1, 1): 13313380641917178378,
(0, -2, 2): 3300729307248399927,
(0, -3, 3): 1503336893889795583,
(0, -4, 4): 10060660257644807637,
(0, -5, 5): 2613961411735854838,

(1, 4, -5): 13476510822332751603,
(1, 3, -4): 14862051557182589828,
(1, 2, -3): 4994050721206873361,
(1, 1, -2): 1533047034780867359,
(1, 0, -1): 14733174309712718937,
(1, -1, 0): 13288936609690794407,
(1, -2, 1): 8654508882559949035,
(1, -3, 2): 18071121815839094851,
(1, -4, 3): 14290800167692211014,
(1, -5, 4): 15521623660326241119,
(1, -6, 5): -1,

(2, 3, -5): 6336409208809923494,
(2, 2, -4): 15711127134202039181,
(2, 1, -3): 13621517375642790498,
(2, 0, -2): 7536982841581896974,
(2, -1, -1): 17265457799223545964,
(2, -2, 0): 1375358603569454382,
(2, -3, 1): 10724534189979383858,
(2, -4, 2): 16134249891398683417,
(2, -5, 3): 11359358801631150336,
(2, -6, 4): -1,
(2, -7, 5): -1,

(3, 2, -5): 4120461599787512707,
(3, 1, -4): 6432106195970801773,
(3, 0, -3): 9163956974091406101,
(3, -1, -2): 7702706718074166436,
(3, -2, -1): 13618073712606537975,
(3, -3, 0): 972414462113362012,
(3, -4, 1): 15348376841733596592,
(3, -5, 2): 16267665463287930254,
(3, -6, 3): -1,
(3, -7, 4): -1,
(3, -8, 5): -1,

(4, 1, -5): 7330334617727317686,
(4, 0, -4): 15816374442629084416,
(4, -1, -3): 9789732663738897482,
(4, -2, -2): 612255692993768337,
(4, -3, -1): 13939161138629257191,
(4, -4, 0): 592301583230350119,
(4, -5, 1): 17968089013567309362,
(4, -6, 2): -1,
(4, -7, 3): -1,
(4, -8, 4): -1,
(4, -9, 5): -1,

(5, 0, -5): 3135654740086792305,
(5, -1, -4): 8857702522973846636,
(5, -2, -3): 18295052659086930627,
(5, -3, -2): 11858234084313267846,
(5, -4, -1): 7355896468892986707,
(5, -5, 0): 14471375923077555854,
(5, -6, 1): -1,
(5, -7, 2): -1,
(5, -8, 3): -1,
(5, -9, 4): -1,
(5, -10, 5): -1}

pieceList_map = {
#b pieces
(0, 5, -5): [0, 'N', 7039324259174552899],
(-2, 5, -3): [-1, 'P', 2708738351447517863],
(-1, 4, -3): [1, 'M', 17276587691014336917],#
(0, 3, -3): [-1, 'P', 1811291666407332732],
(1, 4, -5): [1, 'M', 13326266845422094801],#
(1, 3, -4): [1, 'M', 1809515583972370874],
(-1, 5, -4): [1, 'M', 16240295312056102057],
(2, 3, -5): [-1, 'P', 1571580890494471027],
(0, 4, -4): [-1, 'P', 14017614727057677400],

# w pieces
(-2, -3, 5): [-1, 'm', 14917430532102944307],
(-1, -4, 5): [1, 'n', 3843109819342283363],#
(0, -5, 5): [0, 'p', 10807404499587620088], #
(0, -3, 3): [-1, 'm', 9592769839177490520],#
(-1, -3, 4): [1, 'p', 5554593599456045088],
(1, -5, 4): [1, 'p', 1938315421320155298],
(1, -4, 3): [1, 'p', 10195476464469860234],
(2, -5, 3): [-1, 'm', 12339900744325023683],
(0, -4, 4): [-1, 'm', 688889229393588896]#
}


pieceList_mapCopy = {
#b pieces
(0, 5, -5): [0, 'N', 7039324259174552899],
(-2, 5, -3): [-1, 'P', 2708738351447517863],
(-1, 4, -3): [1, 'M', 17276587691014336917],#
(0, 3, -3): [-1, 'P', 1811291666407332732],
(1, 4, -5): [1, 'M', 13326266845422094801],#
(1, 3, -4): [1, 'M', 1809515583972370874],
(-1, 5, -4): [1, 'M', 16240295312056102057],
(2, 3, -5): [-1, 'P', 1571580890494471027],
(0, 4, -4): [-1, 'P', 14017614727057677400],

# w pieces
(-2, -3, 5): [-1, 'm', 14917430532102944307],
(-1, -4, 5): [1, 'n', 3843109819342283363],#
(0, -5, 5): [0, 'p', 10807404499587620088], #
(0, -3, 3): [-1, 'm', 9592769839177490520],#
(-1, -3, 4): [1, 'p', 5554593599456045088],
(1, -5, 4): [1, 'p', 1938315421320155298],
(1, -4, 3): [1, 'p', 10195476464469860234],
(2, -5, 3): [-1, 'm', 12339900744325023683],
(0, -4, 4): [-1, 'm', 688889229393588896]#
}
